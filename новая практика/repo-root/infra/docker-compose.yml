version: '3.8'

services:
  # ────────── Postgres ──────────
  postgres:
    image: postgres:16-alpine
    container_name: sport-db
    restart: unless-stopped
    environment:
      POSTGRES_DB:       sport
      POSTGRES_USER:     user
      POSTGRES_PASSWORD: password
    volumes:
      # Данные БД
      - pgdata:/var/lib/postgresql/data
      # Инициализация ролей + прав
      - ./db/init/01_roles.sql:/docker-entrypoint-initdb.d/01_roles.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d sport"]
      interval: 10s
      retries: 5

  # ────────── Flyway миграции ──────────
  flyway:
    image: flyway/flyway:9-alpine
    container_name: sport-flyway
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      FLYWAY_URL:      jdbc:postgresql://postgres:5432/sport
      FLYWAY_USER:     user
      FLYWAY_PASSWORD: password
      # Можно задать дополнительные опции, если нужно
    volumes:
      # Ваши SQL-миграции: V1__, V2__ и т.п.
      - ./db/migration:/flyway/sql:ro
    entrypoint: ["flyway", "migrate"]
    # После успешного применения миграций контейнер завершится с 0, и svc-user запустится

  # ────────── Java-микросервис ──────────
  svc-user:
    container_name: svc-user
    build:
      context: ../svc-user
    depends_on:
      flyway:
        condition: service_completed_successfully
    environment:
      SPRING_DATASOURCE_URL:      jdbc:postgresql://postgres:5432/sport
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8080/api/db-check || exit 1"]
      interval: 30s
      retries: 5

volumes:
  pgdata:
